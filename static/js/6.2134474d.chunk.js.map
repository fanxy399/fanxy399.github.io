{"version":3,"sources":["Screens/Unauthenticated/Login.tsx","Screens/Unauthenticated/Register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","Screens/Unauthenticated/index.tsx"],"names":["Login","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","handleSubmit","value","a","username","password","onFinish","Item","name","rules","required","message","placeholder","type","id","LongButton","loading","htmlType","Register","register","cpassword","Error","Unauthenticated","useState","isRegister","setIsRegister","error","setError","useDoucmentTitle","Container","Header","Background","ShadowCard","Title","onClick","styled","h2","div","left","right","header","logo"],"mappings":"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","file":"static/js/6.2134474d.chunk.js","sourcesContent":["import { useAuth } from \"context/auth-context\";\nimport { Form, Input } from \"antd\";\nimport { LongButton } from \"./index\";\nimport { useAsync } from \"utils/useAsync\";\n\nexport default function Login({\n  onError,\n}: {\n  onError: (error: Error) => void;\n}) {\n  const { login } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n  const handleSubmit = async (value: {\n    username: string;\n    password: string;\n  }) => {\n    const { username, password } = value;\n    try {\n      await run(login({ username, password }));\n    } catch (error) {\n      onError(error);\n    }\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name=\"username\"\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder=\"用户名\" type=\"text\" id=\"username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder=\"密码\" type=\"password\" id=\"password\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType=\"submit\" type=\"primary\">\n          登陆\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { useAuth } from \"context/auth-context\";\nimport { Form, Input } from \"antd\";\nimport { LongButton } from \"./index\";\nimport { useAsync } from \"utils/useAsync\";\n\nexport default function Register({\n  onError,\n}: {\n  onError: (error: Error) => void;\n}) {\n  const { register } = useAuth();\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true });\n  const handleSubmit = async ({\n    cpassword,\n    ...value\n  }: {\n    username: string;\n    password: string;\n    cpassword: string;\n  }) => {\n    if (cpassword !== value.password) {\n      onError(new Error(\"请确认两次输入密码不一致\"));\n      return;\n    }\n    try {\n      await run(register(value));\n    } catch (error) {\n      onError(error);\n    }\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name=\"username\"\n        rules={[{ required: true, message: \"请输入用户名\" }]}\n      >\n        <Input placeholder=\"用户名\" type=\"text\" id=\"username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"请输入密码\" }]}\n      >\n        <Input placeholder=\"密码\" type=\"password\" id=\"password\" />\n      </Form.Item>\n      <Form.Item\n        name=\"cpassword\"\n        rules={[{ required: true, message: \"请确认密码\" }]}\n      >\n        <Input placeholder=\"确认密码\" type=\"password\" id=\"cpassword\" />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType=\"submit\" type=\"primary\">\n          注册\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import { useState } from \"react\";\nimport Login from \"Screens/Unauthenticated/Login\";\nimport Register from \"Screens/Unauthenticated/Register\";\nimport logo from \"assets/logo.svg\";\nimport left from \"assets/left.svg\";\nimport right from \"assets/right.svg\";\nimport { Button, Card, Divider } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDoucmentTitle } from \"utils\";\nimport { ErrorBox } from \"components/lib\";\n\nexport default function Unauthenticated() {\n  const [isRegister, setIsRegister] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const handleToggle = () => {\n    setIsRegister(!isRegister);\n    setError(null);\n  };\n  useDoucmentTitle(`${isRegister ? \"请注册\" : \"请登录\"}`, false);\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? \"请注册\" : \"请登录\"}</Title>\n        <ErrorBox error={error} />\n        {isRegister ? (\n          <Register onError={setError} />\n        ) : (\n          <Login onError={setError} />\n        )}\n        <Divider />\n        <Button type={\"link\"} onClick={handleToggle}>\n          {isRegister ? \"已经有账号了？直接登录\" : \"没有账号？注册新账号\"}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n}\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n  background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n"],"sourceRoot":""}